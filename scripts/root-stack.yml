AWSTemplateFormatVersion: "2010-09-09"
Description: >
  This template deploys a VPC, two availability zones containing one public and one private subnet. It deploys an
  Internet Gateway, with a default route on the public subnets. It deploys NAT gateways on each public subnet, and
  default routes for them in the private subnets.

  It then deploys a highly-available ECS cluster using an AutoScaling Group, with ECS host distributed across
  multiple availability zones.

  Tt then deploys a pair of API Gateway (see gateway folder), Backend API (see backend folder) and Frontend App 
  (see frontend folder) which are published on the Elastic Container Registry (ECR).

Parameters: 
  StackName: 
    Type: String
    Default: 'vue-exp-apigw-ecs'
    Description: Name of cloud formation stack to provision.
  
  TemplateS3BucketUrl:
    Type: String
    AllowedPattern : '.+' # Required Parameter
    Description: URL of s3 bucket that will contain the cloud formation scripts. (eg. https://s3.amazonaws.com/YOUR_S3_BUCKET_NAME)

Resources:
  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - ${TemplateS3BucketUrl}/infrastructure/vpc.yaml
        - { TemplateS3BucketUrl: !Ref TemplateS3BucketUrl }
      Parameters:
        EnvironmentName: !Ref StackName
        VpcCIDR: 10.180.0.0/16
        PublicSubnet1CIDR: 10.180.8.0/21
        PublicSubnet2CIDR: 10.180.16.0/21
        PrivateSubnet1CIDR: 10.180.24.0/21
        PrivateSubnet2CIDR: 10.180.32.0/21

  SecurityGroups:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - ${TemplateS3BucketUrl}/infrastructure/security-groups.yaml
        - { TemplateS3BucketUrl: !Ref TemplateS3BucketUrl }
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VPC: !GetAtt VPC.Outputs.VPC

  ALB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - ${TemplateS3BucketUrl}/infrastructure/alb.yaml
        - { TemplateS3BucketUrl: !Ref TemplateS3BucketUrl }
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VPC: !GetAtt VPC.Outputs.VPC
        Subnets: !GetAtt VPC.Outputs.PublicSubnets
        SecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup

  ECS:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - ${TemplateS3BucketUrl}/infrastructure/cluster.yaml
        - { TemplateS3BucketUrl: !Ref TemplateS3BucketUrl }
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        InstanceType: t2.micro
        ClusterSize: 6
        VPC: !GetAtt VPC.Outputs.VPC
        SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
        Subnets: !GetAtt VPC.Outputs.PrivateSubnets

  LifecycleHook:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - ${TemplateS3BucketUrl}/infrastructure/lifecycle-hook.yaml
        - { TemplateS3BucketUrl: !Ref TemplateS3BucketUrl }
      Parameters:
        Cluster: !GetAtt ECS.Outputs.Cluster
        ECSAutoScalingGroupName: !GetAtt ECS.Outputs.ECSAutoScalingGroupName

Outputs:
  ApiGWServiceUrl:
    Description: The URL endpoint for the API Gateway
    Value: !Join ["/", [!GetAtt ALB.Outputs.LoadBalancerUrl, "/"]]